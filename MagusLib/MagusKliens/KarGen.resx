<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="iKarakterBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAAAAGAAAABgAAAAAAAAAAAA
        AAADBAIDBAIFBgUFBgMCAwEDBAIFBgQFBgQDBAIDBAMDAwMFBQQDBAIDBAICAwEDAwMDAwMCAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgIDAwMCAgICAgICAgIDBAEDBAIDAwIDAgMDBAIEBQMFBgQE
        BAMDAwICAgICAgICAgMBAwICAwICAwMCAwMBAgMCAwQCAgMCAgIDAwIDAwIEBAQDAwMCAgICAgICAgIC
        AgICAgICAgICAgIBAgIEBQICAwICAgIEBAMDBAIEBQMEBQMCAwICAgICAgIEAwIJCAQTFAoYGQoQEgcU
        FggSEwcTFAoQEAYODwcGBgQDAwQCAgIBAQECAgICAgICAgICAgICAgICAgICAgIAAgIHCAMGBQQEBAME
        BAMCAwEEBQMDBAMCAgIDAgQKDQUZGgseIg0zORRZZSBmdx1kdx1UZRY7UAo3RBEdIgkWGg0QEwkKCwYD
        AwMEAgMCAgICAgIDAwICAwIDAwMDBAMCAwIICAIHBgMGBwUEBQMDBAIDBAIDAgMMCQUhJA0lKhBbaCF1
        jCV7lR91iyJCWgs1TA4rQQo4UAtQahZJZRZIYxcuPw8bHgsVFwoFBwMCAgIDAwIEBQMEBQMFBgQFBgQD
        BAIHBwQFBQMDBAIEBQMCAwIBAgQREgghJBBQVSpueyqbqT+CiTw2PhENEAQuPRBSZyMzSA80PxQOEQQs
        NQ1XaR5thR9ZdhQrOA8dIg4QEgkCAgMDBAEEBAMEBQMDBAMCAgEDBAIEBQMFBgQCBAIBAgMREggXGAds
        dzJRWR+Pnzk7PxwFBgMGBwUFBwMbIQlgbzJdcCgfJA4DAwIDAwIDBAMjKwpxhyhIXBU+ThQbHwsSFAkC
        AwICAwECAgICAgICAgIFBAIGBgQFBgQDAwIMDgYTFwhqdi+2vmQ1ORmjs0q3w2lSWDEFBgMFBgMFBgRB
        SCCLlUYZHwsCAwMFBAMjKQtqgRyCmCpAThJmfiNKWh0gJQ4PEAcCAgMCAgICAgICAgIIBwMHBgMEBQMF
        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
        EQM9RSAtMhgQFAk6UA9VdxQVIQsmMRYICwYCAwMCAgIHCgMFCQMJDQMNEgMNEAQKDAQEBQIOEAopMhc4
        QRaBlSpneyAYIAgEBAQICAMODQYuNBd5jDGWp1AHBwQICQIHCAMGCAQ4QSBpgSdSdBUZIgswOR8PEgwD
        AwIDBAMDAwIEBwIFCwIICgMOEgcKDAUGBgQEBQIEBAQHCQUpMhkoLxBcbxt1kChZbSFHTTMbHxMODwWC
        mC9CUBwMDgglLRY9TRh9kjq8zYR/jE0tNRQ3PiUMDgkEBQIGBwQEBQIICQUGCgMGCwIFBwIICgQMDwYM
        EAQICwMGCAMEBAQEBAIbIxEfKRMyOhRldijY4ai2ynGwwmZ1hixzhS2crVG9zoKUq05xgTJISxw+Rx4q
        Lx4DBAMEBQMICwMGCAIFBgMFBwMIDQMLEQUDBAIDBAIICgMLDgQKDwIHCQQFBgQEBAIDAwMEBQMqLx42
        PCJISyVNTyROWhpEURZDTxdTWx9jaDBZXzBBSikvNCMGBwUDBAIDAwMEBQMDBQEEBQIFBQIHCQQFBwMH
        DQMEBQMFBgMHCQMJCwMOEQQICQIFBgMFBgQEBQQDAwIEBQMDBAIGCQQWHA4gKBUhKBIwNyE3OSosLiQK
        CggCAwMDAwEEBAIEBQIGBwIGBwMEBQIDAwICAwIDBwIEBwMDBwMGCAMFBgMJDAMQFQQRFQMNDwQICgQH
        CAQFBwIEBgIICwIIDQMJDwUECgIECQQEBgIDBAIBAgMDBQIEBgIHCQIHCQMHCQMHCQMICgMFBgQDBAIH
        CQMHCwMHDAQECAIDBgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>